{"version":3,"file":"static/js/145.6978ce7f.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { List, ListItem } from '@mui/material';\nimport { StyledLink } from 'pages/Home/Home.styled';\n\nimport { useLocation } from 'react-router-dom';\n\nfunction MoviesList({ movies }) {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(movie => (\n        <ListItem key={movie.id}>\n          <StyledLink state={{ from: location }} to={`/movies/${movie.id}`}>\n            {movie.title || movie.name}\n          </StyledLink>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nexport default MoviesList;\n","import { Container } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #1976d2;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const StyledContainer = styled(Container)`\n  margin-top: 20px;\n`;\n","import React, { useState } from 'react';\nimport { TextField, Button, Box, Paper } from '@mui/material';\n\nfunction SearchForm({ handleSetQuery }) {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleSetQuery(query);\n    setQuery('');\n  };\n\n  return (\n    <Box component=\"div\" mt={2} display=\"flex\" alignItems=\"center\">\n      <Paper\n        component=\"form\"\n        elevation={3}\n        onSubmit={handleSubmit}\n        sx={{\n          display: 'flex',\n          flexGrow: 1,\n          borderRadius: 1,\n        }}\n      >\n        <TextField\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n          type=\"text\"\n          name=\"query\"\n          variant=\"outlined\"\n          fullWidth\n          label=\"Search Movie\"\n          sx={{ borderRadius: 1, width: '400px' }}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          sx={{ borderRadius: 1 }}\n        >\n          Search\n        </Button>\n      </Paper>\n    </Box>\n  );\n}\n\nexport default SearchForm;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByQuery } from 'services/api';\n\nfunction Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchedMovie, setSearchedMovie] = useState([]);\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query) {\n      fetchMoviesByQuery(query).then(data => {\n        setSearchedMovie(data.results);\n      });\n    }\n  }, [searchParams]);\n\n  const handleSetQuery = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <div>\n      <SearchForm handleSetQuery={handleSetQuery} />\n      <MoviesList movies={searchedMovie} />\n    </div>\n  );\n}\n\nexport default Movies;\n","import axios from 'axios';\n\nconst moviesDb = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '9fbcd18861474c40784b1f7f4f21e949',\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await moviesDb.get('/trending/movie/day');\n\n  return data;\n};\n\nexport const fetchMovieInformationById = async id => {\n  const response = await moviesDb.get(`/movie/${id}`);\n\n  return response.data;\n};\n\nexport const fetchMovieCastById = async id => {\n  const response = await moviesDb.get(`/movie/${id}/credits`);\n\n  return response.data;\n};\n\nexport const fetchMovieReviewsById = async id => {\n  const response = await moviesDb.get(`/movie/${id}/reviews`);\n\n  return response.data;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  try {\n    const { data } = await moviesDb.get('/search/movie', {\n      params: {\n        query,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error('Error fetching movies by query:', error);\n    throw error;\n  }\n};\n"],"names":["_ref","movies","location","useLocation","_jsx","List","children","map","movie","ListItem","StyledLink","state","from","to","concat","id","title","name","styled","Link","_templateObject","_taggedTemplateLiteral","StyledContainer","Container","_templateObject2","handleSetQuery","_useState","useState","_useState2","_slicedToArray","query","setQuery","Box","component","mt","display","alignItems","_jsxs","Paper","elevation","onSubmit","e","preventDefault","sx","flexGrow","borderRadius","TextField","value","onChange","target","type","variant","fullWidth","label","width","Button","color","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","searchedMovie","setSearchedMovie","useEffect","get","fetchMoviesByQuery","then","data","results","SearchForm","MoviesList","moviesDb","axios","baseURL","params","api_key","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$moviesDb$get","_context","prev","next","sent","abrupt","stop","apply","arguments","fetchMovieInformationById","_ref2","_callee2","response","_context2","_x","fetchMovieCastById","_ref3","_callee3","_context3","_x2","fetchMovieReviewsById","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_yield$moviesDb$get2","_context5","t0","console","error","_x4"],"sourceRoot":""}